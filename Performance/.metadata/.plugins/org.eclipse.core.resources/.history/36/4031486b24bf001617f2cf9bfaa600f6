package analysis;

import java.text.DecimalFormat;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collections;

import model.*;

public class ExecuteAnalysis {

	private static double[] EDF_preEmptionArr, LLF_preEmptionArr, workloadArr;

	public static void main(String[] args) {

		int numTasks = 2;
		int numSets = 10;
		int maxP = 10;
		
		int numSamples = 10;

		runAnalysis(numSamples, numTasks, numSets, maxP);

		resultToString(numSamples);

	}

	private static void runAnalysis(int numSamples, int numTasks, int numSets, int maxP) {
		EDF_preEmptionArr = new double[numSamples];
		LLF_preEmptionArr = new double[numSamples];
		workloadArr = new double[numSamples];

		for (int i = 0; i < numSamples; i++) {
			TaskGenerator myTaskGenerator = new TaskGenerator(numTasks, numSets, maxP);
			DecimalFormat df = new DecimalFormat("#.###");
			workloadArr[i] = Double.parseDouble(df.format(myTaskGenerator.getAverageWorkload()));
			EDF_preEmptionArr[i] = myTaskGenerator.getAveragePreEmptionEDF();
			LLF_preEmptionArr[i] = myTaskGenerator.getAveragePreEmptionLLF();
		}

	}

	private static void resultToString(int numSamples) {
		for (int i = 0; i < numSamples; i++) {
			System.out.print(workloadArr[i] + " ");
		}
		System.out.println();
		for (int i = 0; i < numSamples; i++) {
			System.out.print(EDF_preEmptionArr[i] + " ");
		}
		System.out.println();
		for (int i = 0; i < numSamples; i++) {
			System.out.print(LLF_preEmptionArr[i] + " ");
		}
		System.out.println();
		
	}

}
